<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
				        http://www.springframework.org/schema/beans/spring-beans.xsd
				        http://www.springframework.org/schema/context
				 		http://www.springframework.org/schema/context/spring-context.xsd
				        http://www.springframework.org/schema/mvc
				        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:component-scan base-package="platform" use-default-filters="false">
		<context:include-filter type="aspectj" expression="platform..*.web..*.controller..*" />
		<context:include-filter type="aspectj" expression="platform.szxyzxx..*.service..*" />
	</context:component-scan>

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1" />
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html; charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html; charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer" ref="webBindingInitializer" />

		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<!-- 				json转换器 -->
				<ref bean="mappingJackson2HttpMessageConverter" />
			</list>
		</property>

		<property name="customArgumentResolvers">
			<list>
				<bean class="platform.szxyzxx.web.common.annotation.CurrentUserMethodArgumentResolver" />
				<bean class="platform.szxyzxx.web.common.annotation.EasyUIPageMethodArgumentResolver" />
			</list>
		</property>
	</bean>

	<!-- validation setting -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<description>Base message source to handle internationalization</description>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="basenames">
			<list>
				<!-- main resources -->
				<!-- <value>classpath:config/properties/valid/resource</value> -->
				<!-- <value>classpath:config/properties/valid/user</value> -->
			</list>
		</property>
	</bean>

	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<bean id="webBindingInitializer" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
		<!-- <property name="conversionService" ref="conversionService"/> -->
		<property name="validator" ref="validator" />
	</bean>
	<!-- validation setting end -->

	<mvc:default-servlet-handler />

	<mvc:annotation-driven>
		<!-- <mvc:argument-resolvers> -->
		<!-- <bean class="platform.szxyzxx.web.annotation.CurrentUserMethodArgumentResolver"/> -->
		<!-- </mvc:argument-resolvers> -->
	</mvc:annotation-driven>

	<context:annotation-config />
		<!--暂时未添加，后续加上-->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="platform.szxyzxx.interceptor.SqlInjectInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
		<!-- 指定所上传文件的总大小不能超过2G。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="2000000000" />
	</bean>

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/view/error_fileupload.jsp页面 -->
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
			</props>
		</property>
	</bean>

</beans>