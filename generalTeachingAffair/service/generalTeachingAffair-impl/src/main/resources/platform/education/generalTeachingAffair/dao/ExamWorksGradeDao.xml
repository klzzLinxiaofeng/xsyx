<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="platform.education.generalTeachingAffair.dao.ExamWorksGradeDao">

	<resultMap id="ExamWorksGradeResult" type="platform.education.generalTeachingAffair.model.ExamWorksGrade">
		<result property="id" column="id" />
		<result property="examWorksId" column="exam_works_id" />
		<result property="schoolId" column="school_id" />
		<result property="gradeId" column="grade_id" />
		<result property="jointExamCode" column="joint_exam_code" />
		<result property="statSubjectCount" column="stat_subject_count" />
		<result property="examTeamCount" column="exam_team_count" />
		<result property="finishedTeamCount" column="finished_team_count" />
		<result property="examStudentCount" column="exam_student_count" />
		<result property="statStudentCount" column="stat_student_count" />
		<result property="lastPublishTime" column="last_publish_time" />
		<result property="createDate" column="create_date" />
		<result property="modifyDate" column="modify_date" />
		<result property="isDeleted" column="is_deleted" />
	</resultMap>

	<insert id="create" parameterType="platform.education.generalTeachingAffair.model.ExamWorksGrade">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		INSERT INTO pj_exam_works_grade (
		id,
		exam_works_id,
		school_id,
		grade_id,
		joint_exam_code,
		stat_subject_count,
		exam_team_count,
		finished_team_count,
		exam_student_count,
		stat_student_count,
		last_publish_time,
		create_date,
		modify_date,
		is_deleted
		)
		VALUES (
		#{id},
		#{examWorksId},
		#{schoolId},
		#{gradeId},
		#{jointExamCode},
		#{statSubjectCount},
		#{examTeamCount},
		#{finishedTeamCount},
		#{examStudentCount},
		#{statStudentCount},
		#{lastPublishTime},
		#{createDate},
		#{modifyDate},
		<choose>
			<when test="isDeleted != null">
				<choose>
					<when test="isDeleted == true">
						1
					</when>
					<otherwise>
						0
					</otherwise>
				</choose>
			</when>
			<otherwise>
				0
			</otherwise>
		</choose>
		)
	</insert>

	<select id="read" resultMap="ExamWorksGradeResult" useCache="false">
		SELECT * FROM pj_exam_works_grade WHERE 1=1
		<if test="args!=null and args[0]!=null">
			AND id = #{args[0],javaType=java.lang.Integer}
		</if>
		ORDER BY id DESC
	</select>

	<select id="findExamWorksGradeByCondition" resultMap="ExamWorksGradeResult" useCache="false">
		SELECT * FROM pj_exam_works_grade
		<if test="args[0] != null">
			WHERE 1=1
			<if test="args[0].id != null">
				AND id = #{args[0].id,javaType=java.lang.Integer}
			</if>
			<if test="args[0].examWorksId != null">
				AND exam_works_id = #{args[0].examWorksId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].schoolId != null">
				AND school_id = #{args[0].schoolId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].gradeId != null">
				AND grade_id = #{args[0].gradeId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].jointExamCode != null and args[0].jointExamCode != ''">
				AND joint_exam_code = #{args[0].jointExamCode,javaType=java.lang.String}
			</if>
			<if test="args[0].statSubjectCount != null">
				AND stat_subject_count = #{args[0].statSubjectCount,javaType=java.lang.Integer}
			</if>
			<if test="args[0].examTeamCount != null">
				AND exam_team_count = #{args[0].examTeamCount,javaType=java.lang.Integer}
			</if>
			<if test="args[0].finishedTeamCount != null">
				AND finished_team_count = #{args[0].finishedTeamCount,javaType=java.lang.Integer}
			</if>
			<if test="args[0].examStudentCount != null">
				AND exam_student_count = #{args[0].examStudentCount,javaType=java.lang.Integer}
			</if>
			<if test="args[0].statStudentCount != null">
				AND stat_student_count = #{args[0].statStudentCount,javaType=java.lang.Integer}
			</if>
			<if test="args[0].lastPublishTime != null">
				AND last_publish_time = #{args[0].lastPublishTime,javaType=java.util.Date}
			</if>
			<if test="args[0].createDate != null">
				AND create_date = #{args[0].createDate,javaType=java.util.Date}
			</if>
			<if test="args[0].modifyDate != null">
				AND modify_date = #{args[0].modifyDate,javaType=java.util.Date}
			</if>
			<if test="args[0].isDeleted != null">
				<choose>
					<when test="args[0].isDeleted == true">
						AND is_deleted  = 1
					</when>
					<otherwise>
						AND is_deleted  = 0
					</otherwise>
				</choose>
			</if>
		</if>
	</select>

	<select id="count" resultType="java.lang.Long" useCache="false">
		SELECT count(*) FROM pj_exam_works_grade
		<if test="args[0] != null">
			WHERE 1=1
			<if test="args[0].id != null">
				AND id = #{args[0].id,javaType=java.lang.Integer}
			</if>
			<if test="args[0].examWorksId != null">
				AND exam_works_id = #{args[0].examWorksId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].schoolId != null">
				AND school_id = #{args[0].schoolId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].gradeId != null">
				AND grade_id = #{args[0].gradeId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].jointExamCode != null and args[0].jointExamCode != ''">
				AND joint_exam_code = #{args[0].jointExamCode,javaType=java.lang.String}
			</if>
			<if test="args[0].statSubjectCount != null">
				AND stat_subject_count = #{args[0].statSubjectCount,javaType=java.lang.Integer}
			</if>
			<if test="args[0].examTeamCount != null">
				AND exam_team_count = #{args[0].examTeamCount,javaType=java.lang.Integer}
			</if>
			<if test="args[0].finishedTeamCount != null">
				AND finished_team_count = #{args[0].finishedTeamCount,javaType=java.lang.Integer}
			</if>
			<if test="args[0].examStudentCount != null">
				AND exam_student_count = #{args[0].examStudentCount,javaType=java.lang.Integer}
			</if>
			<if test="args[0].statStudentCount != null">
				AND stat_student_count = #{args[0].statStudentCount,javaType=java.lang.Integer}
			</if>
			<if test="args[0].lastPublishTime != null">
				AND last_publish_time = #{args[0].lastPublishTime,javaType=java.util.Date}
			</if>
			<if test="args[0].createDate != null">
				AND create_date = #{args[0].createDate,javaType=java.util.Date}
			</if>
			<if test="args[0].modifyDate != null">
				AND modify_date = #{args[0].modifyDate,javaType=java.util.Date}
			</if>
			<if test="args[0].isDeleted != null">
				<choose>
					<when test="args[0].isDeleted == true">
						AND is_deleted  = 1
					</when>
					<otherwise>
						AND is_deleted  = 0
					</otherwise>
				</choose>
			</if>
		</if>
	</select>

	<select id="findById" resultMap="ExamWorksGradeResult" useCache="false">
		SELECT * FROM pj_exam_works_grade WHERE id = #{args[0],javaType=java.lang.Integer}
	</select>

	<update id="update" parameterType="platform.education.generalTeachingAffair.model.ExamWorksGrade">
		UPDATE pj_exam_works_grade
		SET
		<if test="examWorksId != null">
			exam_works_id=#{examWorksId},
		</if>
		<if test="schoolId != null">
			school_id=#{schoolId},
		</if>
		<if test="gradeId != null">
			grade_id=#{gradeId},
		</if>
		<if test="jointExamCode != null">
			joint_exam_code=#{jointExamCode},
		</if>
		<if test="statSubjectCount != null">
			stat_subject_count=#{statSubjectCount},
		</if>
		<if test="examTeamCount != null">
			exam_team_count=#{examTeamCount},
		</if>
		<if test="finishedTeamCount != null">
			finished_team_count=#{finishedTeamCount},
		</if>
		<if test="examStudentCount != null">
			exam_student_count=#{examStudentCount},
		</if>
		<if test="statStudentCount != null">
			stat_student_count=#{statStudentCount},
		</if>
		<if test="lastPublishTime != null">
			last_publish_time=#{lastPublishTime},
		</if>
		<if test="createDate != null">
			create_date=#{createDate},
		</if>
		<if test="modifyDate != null">
			modify_date=#{modifyDate},
		</if>
		<if test="isDeleted != null">
			<choose>
				<when test="isDeleted == true">
					is_deleted  = 1,
				</when>
				<otherwise>
					is_deleted  = 0,
				</otherwise>
			</choose>
		</if>
		id = #{id}
		WHERE id = #{id}
	</update>

	<delete id="delete">
		DELETE FROM pj_exam_works_grade
		WHERE id = #{id}
	</delete>

	<select id="findOfExamWorks" resultMap="ExamWorksGradeResult" useCache="false">
		SELECT * FROM pj_exam_works_grade
		WHERE is_deleted = 0
		AND exam_works_id =  #{args[0],javaType=java.lang.Integer}
	</select>

	<select id="findUnique" resultMap="ExamWorksGradeResult" useCache="false">
		SELECT * FROM pj_exam_works_grade
		WHERE is_deleted = 0
		<if test="args[0] != null">
			AND exam_works_id = #{args[0],javaType=java.lang.Integer}
		</if>
		<if test="args[1] != null">
			AND grade_id = #{args[1],javaType=java.lang.Integer}
		</if>
		<if test="args[2] != null and args[2] !=''">
			AND joint_exam_code = #{args[2],javaType=java.lang.String}
		</if>
	</select>


	<select id="findOfExamWorksWithScore" resultType="java.util.Map" useCache="false">
		SELECT
		ewg.id,
		ewg.exam_works_id examWorksId,
		ewg.school_id schoolId,
		ewg.grade_id gradeId,
		ewg.joint_exam_code jointExamCode,
		SUM(ews.full_score) totalScore,
		g.`name` gradeName
		FROM pj_exam_works_grade ewg
		LEFT JOIN pj_exam_works_subject ews ON ewg.exam_works_id = ews.exam_works_id AND ewg.grade_id = ews.grade_id
		LEFT JOIN pj_grade g ON ewg.grade_id = g.id
		WHERE 1=1
		AND ewg.is_deleted = 0
		AND ews.is_delteted = 0
		AND ews.stat_needed = 1
		AND g.is_deleted = 0
		<if test="args[0] != null">
			AND ewg.exam_works_id = #{args[0],javaType=java.lang.Integer}
		</if>
		<if test="args[1] != null">
			AND ewg.grade_id = #{args[1],javaType=java.lang.Integer}
		</if>
		GROUP BY ewg.id
		ORDER BY g.uni_grade_code
	</select>


</mapper>