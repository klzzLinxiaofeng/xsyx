<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="platform.education.generalTeachingAffair.dao.TeamAdminDao">

	<resultMap id="TeamAdminResult" type="platform.education.generalTeachingAffair.model.TeamAdmin">
		<result property="id" column="id" />
		<result property="schoolId" column="school_id" />
		<result property="gradeId" column="grade_id" />
		<result property="teamId" column="team_id" />
		<result property="teacherId" column="teacher_id" />
		<result property="userId" column="user_id" />
		<result property="name" column="name" />
		<result property="type" column="type" />
		<result property="createDate" column="create_date" />
		<result property="modifyDate" column="modify_date" />
		<result property="isDeleted" column="is_deleted" />
	</resultMap>

	<resultMap id="TeamAdminVoResult" type="platform.education.generalTeachingAffair.vo.TeamAdminVo" extends="TeamAdminResult">
		<result property="teamName" column="team_name"/>
		<result property="teamNumber" column="team_number"/>
		<result property="teamCode" column="team_code"/>
		<result property="gradeName" column="grade_name"/>
		<result property="gradeCode" column="grade_code"/>
	</resultMap>

	<insert id="create" parameterType="platform.education.generalTeachingAffair.model.TeamAdmin">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		INSERT INTO pj_team_admin (
			id, 
			school_id, 
			grade_id, 
			team_id, 
			teacher_id, 
			user_id, 
			name, 
			type, 
			create_date, 
			modify_date, 
			is_deleted
		)
		VALUES (
			#{id}, 
			#{schoolId}, 
			#{gradeId}, 
			#{teamId}, 
			#{teacherId}, 
			#{userId}, 
			#{name}, 
			#{type}, 
			#{createDate}, 
			#{modifyDate}, 
			<choose>
				<when test="isDeleted != null">
					<choose>
						<when test="isDeleted == true">
							1
						</when>
						<otherwise>
							0
						</otherwise>						
					</choose>
				</when>
				<otherwise>
					0
				</otherwise>
			</choose>
		)
	</insert>

	<select id="read" resultMap="TeamAdminResult" useCache="false">
		SELECT * FROM pj_team_admin WHERE 1=1
		<if test="args!=null and args[0]!=null">
		AND id = #{args[0],javaType=java.lang.Integer}
		</if>  
		ORDER BY id DESC
	</select>
	
	<select id="findTeamAdminByCondition" resultMap="TeamAdminResult" useCache="false">
		SELECT * FROM pj_team_admin 
		<if test="args[0] != null">
			WHERE 1=1
			<if test="args[0].id != null">
				AND id = #{args[0].id,javaType=java.lang.Integer}
			</if>
			<if test="args[0].schoolId != null">
				AND school_id = #{args[0].schoolId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].gradeId != null">
				AND grade_id = #{args[0].gradeId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].teamId != null">
				AND team_id = #{args[0].teamId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].teacherId != null">
				AND teacher_id = #{args[0].teacherId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].userId != null">
				AND user_id = #{args[0].userId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].name != null and args[0].name != ''">
				AND name = #{args[0].name,javaType=java.lang.String}
			</if>
			<if test="args[0].type != null">
				AND type = #{args[0].type,javaType=java.lang.Integer}
			</if>
			<if test="args[0].createDate != null">
				AND create_date = #{args[0].createDate,javaType=java.util.Date}
			</if>
			<if test="args[0].modifyDate != null">
				AND modify_date = #{args[0].modifyDate,javaType=java.util.Date}
			</if>
			<if test="args[0].isDeleted != null">
				<choose>
					<when test="args[0].isDeleted == true">
						AND is_deleted  = 1
					</when>
					<otherwise>
						AND is_deleted  = 0
					</otherwise>
				</choose>
			</if>
		</if>
	</select>
	
	<select id="count" resultType="java.lang.Long" useCache="false">
		SELECT count(*) FROM pj_team_admin 
		<if test="args[0] != null">
			WHERE 1=1
			<if test="args[0].id != null">
				AND id = #{args[0].id,javaType=java.lang.Integer}
			</if>
			<if test="args[0].schoolId != null">
				AND school_id = #{args[0].schoolId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].gradeId != null">
				AND grade_id = #{args[0].gradeId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].teamId != null">
				AND team_id = #{args[0].teamId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].teacherId != null">
				AND teacher_id = #{args[0].teacherId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].userId != null">
				AND user_id = #{args[0].userId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].name != null and args[0].name != ''">
				AND name = #{args[0].name,javaType=java.lang.String}
			</if>
			<if test="args[0].type != null">
				AND type = #{args[0].type,javaType=java.lang.Integer}
			</if>
			<if test="args[0].createDate != null">
				AND create_date = #{args[0].createDate,javaType=java.util.Date}
			</if>
			<if test="args[0].modifyDate != null">
				AND modify_date = #{args[0].modifyDate,javaType=java.util.Date}
			</if>
			<if test="args[0].isDeleted != null">
				<choose>
					<when test="args[0].isDeleted == true">
						AND is_deleted  = 1
					</when>
					<otherwise>
						AND is_deleted  = 0
					</otherwise>
				</choose>
			</if>
		</if>
	</select>
	
	<select id="findById" resultMap="TeamAdminResult" useCache="false">
		SELECT * FROM pj_team_admin WHERE id = #{args[0],javaType=java.lang.Integer}
	</select>
	
	<update id="update" parameterType="platform.education.generalTeachingAffair.model.TeamAdmin">
		UPDATE pj_team_admin
		SET 
		<if test="schoolId != null">
			school_id=#{schoolId},
		</if>
		<if test="gradeId != null">
			grade_id=#{gradeId},
		</if>
		<if test="teamId != null">
			team_id=#{teamId},
		</if>
		<if test="teacherId != null">
			teacher_id=#{teacherId},
		</if>
		<if test="userId != null">
			user_id=#{userId},
		</if>
		<if test="name != null">
			name=#{name},
		</if>
		<if test="type != null">
			type=#{type},
		</if>
		<if test="createDate != null">
			create_date=#{createDate},
		</if>
		<if test="modifyDate != null">
			modify_date=#{modifyDate},
		</if>
		<if test="isDeleted != null">
			<choose>
				<when test="isDeleted == true">
					is_deleted  = 1,
				</when>
				<otherwise>
					is_deleted  = 0,
				</otherwise>
			</choose>
		</if>
		id = #{id}
		WHERE id = #{id}
	</update>
	
	<delete id="delete">
		DELETE FROM pj_team_admin
		WHERE id = #{id}
	</delete>

	<select id="findByTeamIds" resultMap="TeamAdminResult" useCache="false">
		SELECT * FROM pj_team_admin WHERE is_deleted = 0 AND type = 3 AND team_id IN
		<foreach collection="args[0]" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>

	<select id="findByGradeIdAndTeamId" resultMap="TeamAdminVoResult" useCache="false">
		SELECT ta.*, t.`name` team_name, t.team_number FROM pj_team_admin ta
		LEFT JOIN pj_team t ON ta.team_id = t.id
		WHERE ta.is_deleted = 0
		AND ta.type = 3
		AND t.is_delete = 0
		<if test="args[0] != null">
			AND ta.grade_id = #{args[0],javaType=java.lang.Integer}
		</if>
		<if test="args[1] != null">
			AND ta.team_id = #{args[1],javaType=java.lang.Integer}
		</if>
		ORDER BY t.team_number
	</select>

	<select id="findByTeacherId" resultMap="TeamAdminVoResult" useCache="false">
		SELECT ta.*, t.`name` team_name, t.team_number,t.code2 AS team_code, g.`name` grade_name, g.uni_grade_code grade_code
		FROM pj_team_admin ta
		LEFT JOIN pj_team t ON ta.team_id = t.id
		LEFT JOIN pj_grade g ON ta.grade_id = g.id
		WHERE ta.is_deleted = 0
		AND ta.type = 3
		AND t.is_delete = 0
		AND g.is_deleted = 0
		AND ta.school_id = #{args[0],javaType=java.lang.Integer}
		AND t.school_year = #{args[1],javaType=java.lang.String}
		AND ta.teacher_id = #{args[2],javaType=java.lang.Integer}
		ORDER BY g.uni_grade_code, t.team_number
	</select>

	<insert id="createTeamAdminBatch" parameterType="platform.education.generalTeachingAffair.model.TeamAdmin">
		INSERT INTO pj_team_admin (
			id,
			school_id,
			grade_id,
			team_id,
			teacher_id,
			user_id,
			name,
			type,
			create_date,
			modify_date,
			is_deleted
		)
		VALUES
		<foreach collection="args[0]" item="item" index="index" separator="," >
			(
			#{item.id},
			#{item.schoolId},
			#{item.gradeId},
			#{item.teamId},
			#{item.teacherId},
			#{item.userId},
			#{item.name},
			#{item.type},
			#{item.createDate},
			#{item.modifyDate},
			<choose>
				<when test="item.isDeleted != null">
					<choose>
						<when test="item.isDeleted == true">
							1
						</when>
						<otherwise>
							0
						</otherwise>
					</choose>
				</when>
				<otherwise>
					0
				</otherwise>
			</choose>
			)
		</foreach>
	</insert>

	<update id="updateTeamAdmin" >
		UPDATE pj_team_admin
		SET is_deleted = 1
		WHERE type = 3
		AND teacher_id = #{args[0],javaType=java.lang.Integer}
		<if test="args[1] != null">
			AND team_id IN
			<foreach collection="args[1]" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
	</update>

	<select id="findIncrementByTeacherId" resultMap="TeamAdminResult" useCache="false">
		SELECT ta.* FROM pj_team_admin ta
		left JOIN pj_team t ON ta.team_id = t.id
		WHERE t.is_delete = 0
		<if test="args[0] != null">
			AND t.school_id = #{args[0],javaType=java.lang.Integer}
		</if>
		<if test="args[1] != null">
			AND t.school_year = #{args[1],javaType=java.lang.String}
		</if>
		<if test="args[2] != null">
			AND ta.teacher_id = #{args[2],javaType=java.lang.Integer}
		</if>
		<if test="args[3] != null">
			AND ta.modify_date > #{args[3],javaType=java.util.Date}
		</if>
		<if test="args[4] != null">
			<choose>
				<when test="args[4] == true">
					AND ta.is_deleted = 1
				</when>
				<otherwise>
					AND ta.is_deleted = 0
				</otherwise>
			</choose>
		</if>
	</select>

	<select id="findFullConfigureTeams" resultType="java.lang.Integer" useCache="false">
		SELECT ta.team_id count FROM pj_team_admin ta
		LEFT JOIN pj_team t ON ta.team_id = t.id
		WHERE ta.is_deleted = 0
		AND t.is_delete = 0
		AND t.school_id = #{args[0],javaType=java.lang.Integer}
		AND t.school_year = #{args[1],javaType=java.lang.String}
		GROUP BY ta.team_id
		HAVING COUNT(ta.team_id) >= #{args[2],javaType=java.lang.Integer}
	</select>
</mapper>