<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="platform.education.generalTeachingAffair.dao.ExamWorksDao">

	<resultMap id="ExamWorksResult" type="platform.education.generalTeachingAffair.model.ExamWorks">
		<result property="id" column="id" />
		<result property="uuid" column="uuid" />
		<result property="schoolId" column="school_id" />
		<result property="gradeId" column="grade_id" />
		<result property="teamId" column="team_id" />
		<result property="subjectCode" column="subject_code" />
		<result property="schoolYear" column="school_year" />
		<result property="termCode" column="term_code" />
		<result property="termValue" column="term_value" />
		<result property="name" column="name" />
		<result property="isJointExam" column="is_joint_exam" />
		<result property="examType" column="exam_type" />
		<result property="examRound" column="exam_round" />
		<result property="examDateBegin" column="exam_date_begin" />
		<result property="examDateEnd" column="exam_date_end" />
		<result property="teacherId" column="teacher_id" />
		<result property="showRanking" column="show_ranking" />
		<result property="createDate" column="create_date" />
		<result property="modifyDate" column="modify_date" />
		<result property="isDeleted" column="is_deleted" />
	</resultMap>

	<resultMap id="ExamWorksVoResult" type="platform.education.generalTeachingAffair.vo.ExamWorksVo" extends="ExamWorksResult">
		<result property="gradeName" column="grade_name" />
		<result property="teamName" column="team_name" />
		<result property="teamNumber" column="team_number" />
		<result property="subjectName" column="subject_name" />
		<result property="fullScore" column="full_score" />
		<result property="highScore" column="high_score" />
		<result property="lowScore" column="low_score" />
		<result property="passScore" column="pass_score" />
		<result property="posterId" column="post_teacher_id" />
		<result property="publisherId" column="publish_teacher_id" />
		<result property="totalScore" column="total_score" />
	</resultMap>



	<insert id="create" parameterType="platform.education.generalTeachingAffair.model.ExamWorks">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		INSERT INTO pj_exam_works (
			id, 
			uuid, 
			school_id, 
			grade_id, 
			team_id, 
			subject_code, 
			school_year, 
			term_code, 
			term_value, 
			name, 
			is_joint_exam, 
			exam_type, 
			exam_round, 
			exam_date_begin, 
			exam_date_end, 
			teacher_id, 
			show_ranking, 
			create_date, 
			modify_date, 
			is_deleted
		)
		VALUES (
			#{id}, 
			#{uuid}, 
			#{schoolId}, 
			#{gradeId}, 
			#{teamId}, 
			#{subjectCode}, 
			#{schoolYear}, 
			#{termCode}, 
			#{termValue}, 
			#{name}, 
			<choose>
				<when test="isJointExam != null">
					<choose>
						<when test="isJointExam == true">
							1, 
						</when>
						<otherwise>
							0, 
						</otherwise>						
					</choose>
				</when>
				<otherwise>
					0, 
				</otherwise>
			</choose>
			#{examType}, 
			#{examRound}, 
			#{examDateBegin}, 
			#{examDateEnd}, 
			#{teacherId}, 
			<choose>
				<when test="showRanking != null">
					<choose>
						<when test="showRanking == true">
							1, 
						</when>
						<otherwise>
							0, 
						</otherwise>						
					</choose>
				</when>
				<otherwise>
					0, 
				</otherwise>
			</choose>
			#{createDate}, 
			#{modifyDate}, 
			<choose>
				<when test="isDeleted != null">
					<choose>
						<when test="isDeleted == true">
							1
						</when>
						<otherwise>
							0
						</otherwise>						
					</choose>
				</when>
				<otherwise>
					0
				</otherwise>
			</choose>
		)
	</insert>

	<select id="read" resultMap="ExamWorksResult" useCache="false">
		SELECT * FROM pj_exam_works WHERE 1=1
		<if test="args!=null and args[0]!=null">
		AND id = #{args[0],javaType=java.lang.Integer}
		</if>  
		ORDER BY id DESC
	</select>
	
	<select id="findExamWorksByCondition" resultMap="ExamWorksResult" useCache="false">
		SELECT * FROM pj_exam_works 
		<if test="args[0] != null">
			WHERE 1=1
			<if test="args[0].id != null">
				AND id = #{args[0].id,javaType=java.lang.Integer}
			</if>
			<if test="args[0].uuid != null and args[0].uuid != ''">
				AND uuid = #{args[0].uuid,javaType=java.lang.String}
			</if>
			<if test="args[0].schoolId != null">
				AND school_id = #{args[0].schoolId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].gradeId != null">
				AND grade_id = #{args[0].gradeId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].teamId != null">
				AND team_id = #{args[0].teamId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].subjectCode != null and args[0].subjectCode != ''">
				AND subject_code = #{args[0].subjectCode,javaType=java.lang.String}
			</if>
			<if test="args[0].schoolYear != null and args[0].schoolYear != ''">
				AND school_year = #{args[0].schoolYear,javaType=java.lang.String}
			</if>
			<if test="args[0].termCode != null and args[0].termCode != ''">
				AND term_code = #{args[0].termCode,javaType=java.lang.String}
			</if>
			<if test="args[0].termValue != null and args[0].termValue != ''">
				AND term_value = #{args[0].termValue,javaType=java.lang.String}
			</if>
			<if test="args[0].name != null and args[0].name != ''">
				AND name = #{args[0].name,javaType=java.lang.String}
			</if>
			<if test="args[0].isJointExam != null">
				<choose>
					<when test="args[0].isJointExam == true">
						AND is_joint_exam  = 1
					</when>
					<otherwise>
						AND is_joint_exam  = 0
					</otherwise>
				</choose>
			</if>
			<if test="args[0].examType != null and args[0].examType != ''">
				AND exam_type = #{args[0].examType,javaType=java.lang.String}
			</if>
			<if test="args[0].examRound != null">
				AND exam_round = #{args[0].examRound,javaType=java.lang.Integer}
			</if>
			<if test="args[0].examDateBegin != null">
				AND exam_date_begin = #{args[0].examDateBegin,javaType=java.util.Date}
			</if>
			<if test="args[0].examDateEnd != null">
				AND exam_date_end = #{args[0].examDateEnd,javaType=java.util.Date}
			</if>
			<if test="args[0].teacherId != null">
				AND teacher_id = #{args[0].teacherId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].showRanking != null">
				<choose>
					<when test="args[0].showRanking == true">
						AND show_ranking  = 1
					</when>
					<otherwise>
						AND show_ranking  = 0
					</otherwise>
				</choose>
			</if>
			<if test="args[0].createDate != null">
				AND create_date = #{args[0].createDate,javaType=java.util.Date}
			</if>
			<if test="args[0].modifyDate != null">
				AND modify_date = #{args[0].modifyDate,javaType=java.util.Date}
			</if>
			<if test="args[0].isDeleted != null">
				<choose>
					<when test="args[0].isDeleted == true">
						AND is_deleted  = 1
					</when>
					<otherwise>
						AND is_deleted  = 0
					</otherwise>
				</choose>
			</if>
		</if>
	</select>
	
	<select id="count" resultType="java.lang.Long" useCache="false">
		SELECT count(*) FROM pj_exam_works 
		<if test="args[0] != null">
			WHERE 1=1
			<if test="args[0].id != null">
				AND id = #{args[0].id,javaType=java.lang.Integer}
			</if>
			<if test="args[0].uuid != null and args[0].uuid != ''">
				AND uuid = #{args[0].uuid,javaType=java.lang.String}
			</if>
			<if test="args[0].schoolId != null">
				AND school_id = #{args[0].schoolId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].gradeId != null">
				AND grade_id = #{args[0].gradeId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].teamId != null">
				AND team_id = #{args[0].teamId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].subjectCode != null and args[0].subjectCode != ''">
				AND subject_code = #{args[0].subjectCode,javaType=java.lang.String}
			</if>
			<if test="args[0].schoolYear != null and args[0].schoolYear != ''">
				AND school_year = #{args[0].schoolYear,javaType=java.lang.String}
			</if>
			<if test="args[0].termCode != null and args[0].termCode != ''">
				AND term_code = #{args[0].termCode,javaType=java.lang.String}
			</if>
			<if test="args[0].termValue != null and args[0].termValue != ''">
				AND term_value = #{args[0].termValue,javaType=java.lang.String}
			</if>
			<if test="args[0].name != null and args[0].name != ''">
				AND name = #{args[0].name,javaType=java.lang.String}
			</if>
			<if test="args[0].isJointExam != null">
				<choose>
					<when test="args[0].isJointExam == true">
						AND is_joint_exam  = 1
					</when>
					<otherwise>
						AND is_joint_exam  = 0
					</otherwise>
				</choose>
			</if>
			<if test="args[0].examType != null and args[0].examType != ''">
				AND exam_type = #{args[0].examType,javaType=java.lang.String}
			</if>
			<if test="args[0].examRound != null">
				AND exam_round = #{args[0].examRound,javaType=java.lang.Integer}
			</if>
			<if test="args[0].examDateBegin != null">
				AND exam_date_begin = #{args[0].examDateBegin,javaType=java.util.Date}
			</if>
			<if test="args[0].examDateEnd != null">
				AND exam_date_end = #{args[0].examDateEnd,javaType=java.util.Date}
			</if>
			<if test="args[0].teacherId != null">
				AND teacher_id = #{args[0].teacherId,javaType=java.lang.Integer}
			</if>
			<if test="args[0].showRanking != null">
				<choose>
					<when test="args[0].showRanking == true">
						AND show_ranking  = 1
					</when>
					<otherwise>
						AND show_ranking  = 0
					</otherwise>
				</choose>
			</if>
			<if test="args[0].createDate != null">
				AND create_date = #{args[0].createDate,javaType=java.util.Date}
			</if>
			<if test="args[0].modifyDate != null">
				AND modify_date = #{args[0].modifyDate,javaType=java.util.Date}
			</if>
			<if test="args[0].isDeleted != null">
				<choose>
					<when test="args[0].isDeleted == true">
						AND is_deleted  = 1
					</when>
					<otherwise>
						AND is_deleted  = 0
					</otherwise>
				</choose>
			</if>
		</if>
	</select>
	
	<select id="findById" resultMap="ExamWorksResult" useCache="false">
		SELECT * FROM pj_exam_works WHERE id = #{args[0],javaType=java.lang.Integer}
	</select>
	
	<update id="update" parameterType="platform.education.generalTeachingAffair.model.ExamWorks">
		UPDATE pj_exam_works
		SET 
		<if test="uuid != null">
			uuid=#{uuid},
		</if>
		<if test="schoolId != null">
			school_id=#{schoolId},
		</if>
		<if test="gradeId != null">
			grade_id=#{gradeId},
		</if>
		<if test="teamId != null">
			team_id=#{teamId},
		</if>
		<if test="subjectCode != null">
			subject_code=#{subjectCode},
		</if>
		<if test="schoolYear != null">
			school_year=#{schoolYear},
		</if>
		<if test="termCode != null">
			term_code=#{termCode},
		</if>
		<if test="termValue != null">
			term_value=#{termValue},
		</if>
		<if test="name != null">
			name=#{name},
		</if>
		<if test="isJointExam != null">
			<choose>
				<when test="isJointExam == true">
					is_joint_exam  = 1,
				</when>
				<otherwise>
					is_joint_exam  = 0,
				</otherwise>
			</choose>
		</if>
		<if test="examType != null">
			exam_type=#{examType},
		</if>
		<if test="examRound != null">
			exam_round=#{examRound},
		</if>
		<if test="examDateBegin != null">
			exam_date_begin=#{examDateBegin},
		</if>
		<if test="examDateEnd != null">
			exam_date_end=#{examDateEnd},
		</if>
		<if test="teacherId != null">
			teacher_id=#{teacherId},
		</if>
		<if test="showRanking != null">
			<choose>
				<when test="showRanking == true">
					show_ranking  = 1,
				</when>
				<otherwise>
					show_ranking  = 0,
				</otherwise>
			</choose>
		</if>
		<if test="createDate != null">
			create_date=#{createDate},
		</if>
		<if test="modifyDate != null">
			modify_date=#{modifyDate},
		</if>
		<if test="isDeleted != null">
			<choose>
				<when test="isDeleted == true">
					is_deleted  = 1,
				</when>
				<otherwise>
					is_deleted  = 0,
				</otherwise>
			</choose>
		</if>
		id = #{id}
		WHERE id = #{id}
	</update>
	
	<delete id="delete">
		DELETE FROM pj_exam_works
		WHERE id = #{id}
	</delete>

	<select id="findMajorExamWorks" resultMap="ExamWorksResult" useCache="false">
		SELECT * FROM pj_exam_works
		WHERE is_deleted = 0
		<if test="args[0] != null">
			AND school_id = #{args[0],javaType=java.lang.Integer}
		</if>
		<if test="args[1] != null and args[1] != ''">
			AND school_year = #{args[1],javaType=java.lang.String}
		</if>
		<if test="args[2] != null and args[2] != ''">
			AND term_code = #{args[2],javaType=java.lang.String}
		</if>
		<if test="args[3] != null and args[3] != ''">
			AND exam_type = #{args[3],javaType=java.lang.String}
		</if>
		<if test="args[4] != null">
			AND exam_round = #{args[4],javaType=java.lang.Integer}
		</if>
		ORDER BY exam_type, exam_round
	</select>

	<select id="findMajorExamWorksByType" resultMap="ExamWorksResult" useCache="false">
		SELECT * FROM pj_exam_works
		WHERE is_deleted = 0
		<if test="args[0] != null">
			AND school_id = #{args[0],javaType=java.lang.Integer}
		</if>
		<if test="args[1] != null and args[1] != ''">
			AND school_year = #{args[1],javaType=java.lang.String}
		</if>
		<if test="args[2] != null and args[2] != ''">
			AND term_code = #{args[2],javaType=java.lang.String}
		</if>
		<if test="args[3] != null and args[3] != ''">
			AND exam_type IN
			<foreach collection="args[3]" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		ORDER BY exam_type, exam_round
	</select>

	<select id="findClassExamWorksByTeacherId" resultMap="ExamWorksVoResult" useCache="false">
		SELECT
			ew.id,
			ew.grade_id,
			ew.team_id,
			ew.subject_code,
			ew.`name`,
			ew.exam_date_begin,
			ew.exam_date_end,
			ews.full_score,
			ews.high_score,
			ews.low_score,
			ews.pass_score,
			g.`name` grade_name,
			t.`name` team_name,
			t.team_number,
			sub.`name` subject_name,
			ewts.post_teacher_id,
			ewts.publish_teacher_id
		FROM
			`pj_exam_works` ew
		LEFT JOIN pj_exam_works_subject ews ON ew.id = ews.exam_works_id
		LEFT JOIN pj_exam_works_team_subject ewts ON ew.id = ewts.exam_works_id
		LEFT JOIN pj_grade g ON ew.grade_id = g.id
		LEFT JOIN pj_team t ON ew.team_id = t.id
		LEFT JOIN pj_subject sub ON ew.subject_code = sub.`code`
		AND ew.school_id = sub.school_id
		WHERE 1 = 1
		AND ew.is_deleted = 0
		AND ews.is_delteted = 0
		AND ewts.is_deleted = 0
		AND g.is_deleted = 0
		AND t.is_delete = 0
		AND sub.is_delete = 0
		AND ew.exam_type = '20'
		AND ew.school_id = #{args[0],javaType=java.lang.Integer}
		AND ew.school_year = #{args[1],javaType=java.lang.String}
		AND ew.term_code = #{args[2],javaType=java.lang.String}
		AND ew.teacher_id = #{args[3],javaType=java.lang.Integer}
	</select>

	<select id="findFrontExamWorksByExamDate" resultMap="ExamWorksResult" useCache="false">
		SELECT
			*
		FROM
			pj_exam_works
		WHERE
			is_joint_exam = 1
		AND is_deleted = 0
		AND exam_date_begin &lt; #{args[0]}
		AND school_id = #{args[1]}
		ORDER BY
			exam_date_begin DESC, id DESC
		LIMIT 1;
	</select>

	<select id="findExamWorksOfStudent" resultMap="ExamWorksVoResult" useCache="false">
		SELECT
			ew.id,
			ew.`name`,
			ewts.team_id,
			SUM(ews.full_score) total_score
		FROM
			pj_exam_student es
		LEFT JOIN pj_exam_works_team_subject ewts ON es.exam_id = ewts.exam_id
		LEFT JOIN pj_exam_works_subject ews ON ewts.exam_works_id = ews.exam_works_id
		AND ewts.grade_id = ews.grade_id
		AND ewts.subject_code = ews.subject_code
		LEFT JOIN pj_exam_works ew ON ews.exam_works_id = ew.id
		WHERE 1=1
		AND ew.is_deleted = 0
		AND ewts.is_deleted = 0
		AND ews.is_delteted = 0
		AND ews.stat_needed = 1
		AND ew.school_id = #{args[0],javaType=java.lang.Integer}
		AND ew.school_year = #{args[1],javaType=java.lang.String}
		AND ew.term_code = #{args[2],javaType=java.lang.String}
		AND es.user_id = #{args[3],javaType=java.lang.Integer}
		GROUP BY ew.id
		ORDER BY ew.exam_type, ew.exam_round, ew.exam_date_begin DESC
	</select>


	<select id="findExamWorksByType" resultMap="ExamWorksResult" useCache="false">
		SELECT * FROM pj_exam_works
		WHERE is_deleted = 0
		<if test="args[0] != null">
			AND school_id = #{args[0],javaType=java.lang.Integer}
		</if>
		<if test="args[1] != null and args[1] != ''">
			AND school_year = #{args[1],javaType=java.lang.String}
		</if>
		<if test="args[2] != null and args[2] != ''">
			AND term_code = #{args[2],javaType=java.lang.String}
		</if>
		<if test="args[3] != null">
			<choose>
				<when test="args[3] == true">
					AND is_joint_exam  = 1
				</when>
				<otherwise>
					AND is_joint_exam  = 0
				</otherwise>
			</choose>
		</if>
		<if test="args[4] != null">
			AND team_id = #{args[4],javaType=java.lang.Integer}
		</if>
		ORDER BY exam_date_begin DESC, id DESC
	</select>


</mapper>